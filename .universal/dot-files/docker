#!/bin/bash

dpsx() {
    local sort_col=0

    case "$1" in
        id)     sort_col=1 ;;
        names)   sort_col=2 ;;
        status) sort_col=3 ;;
        ports)  sort_col=4 ;;
        *)      sort_col=0 ;;
    esac

    {
        echo "ID%NAMES%STATUS%PORTS"
        docker ps --all --format '{{.ID}}%{{.Names}}%{{.Status}}%{{.Ports}}'
    } | {
        if [[ $sort_col -gt 0 ]]; then
            head -n 1 && tail -n +2 | sort -k"$sort_col"
        else
            cat
        fi
    } | column -t -s $'%'
}


function dpj {
    docker container ls --all --format '{"ID":"{{ .ID }}", "Image": "{{ .Image }}", "Names":"{{ .Names }}"}' | jq -C
}


function dcd {
    docker container rm -f $1
}

dc_up() {
    BOLD="\033[1m"
    NORMAL="\033[0m"

    if [ -f docker-compose.yml ]; then
        BASE="docker-compose.yml"
    elif [ -f docker-compose.yaml ]; then
        BASE="docker-compose.yaml"
    else
        echo "Arquivo de compose (docker-compose.yml ou docker-compose.yaml) não encontrado!"
        return 1
    fi

    if [ -f docker-compose.local.yml ]; then
        LOCAL="docker-compose.local.yml"
    elif [ -f docker-compose.local.yaml ]; then
        LOCAL="docker-compose.local.yaml"
    else
        echo "Arquivo de override local (docker-compose.local.yml ou docker-compose.local.yaml) não encontrado!"
        return 1
    fi

    cmd="docker compose $@ -f ${BASE} -f ${LOCAL} up -d --force-recreate --remove-orphans --build"

    echo -e "\n${BOLD}$cmd${NORMAL}\n"
    eval "$cmd"
}


dc_down() {
    BOLD="\033[1m"
    NORMAL="\033[0m"
    
    cmd="docker compose down --volumes --remove-orphans $@"
    
    echo -e "\n${BOLD}$cmd${NORMAL}\n"
    eval "$cmd"
}
